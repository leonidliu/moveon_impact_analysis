---
title: "Get Voter File Covariates"
author: "Leo Liu"
date: "`r Sys.Date()`"
format: markdown_github
self-contained: true
editor: source
execute:
  echo: false
message: false
warning: false
---

```{r}
library(tidyverse)
library(dbplyr)
library(liutils)
library(here)
library(aws.s3)

# Configuration
source(here("config.R"))

# Read voterbase_ids
raw_vb_ids <- "p080_moveon_impact_analysis/month_vf_added.csv" %>%
  s3read_using(FUN = read_csv,
               bucket = bucket,
               object = .)

# Split by voter file dates
split_ids <- raw_vb_ids %>%
  
  # Fix voter file dates
  mutate(file_name = case_when(
    month_vf_added == "20240401" ~ "ntl_20240514_historic",  # Missingness minimized with this file
    month_vf_added == "20240701" ~ "ntl_20240709_historic",
    month_vf_added == "20240801" ~ "ntl_20240813_historic",
    month_vf_added == "20240901" ~ "ntl_20240910_historic",
    month_vf_added == "20241001" ~ "ntl_20241008_historic"
  )) %>%
  select(-month_vf_added) %>%
  
  # Subset names
  mutate(subset_name = paste0("p080_ids_", file_name)) %>%
  
  # BQ full table paths
  mutate(bq_ts_path = paste0("tmc-data-marts.targetsmart_raw.", file_name),
         bq_id_path = paste0("prj-research-uxrq.scratch_lliu.", subset_name)) %>%
  
  # Nest by voter file month
  group_by(subset_name, file_name, bq_id_path, bq_ts_path) %>%
  nest()

# Write IDs to BQ
walk2(split_ids$subset_name,
      split_ids$data,
      ~copy_to(lliu_con,
               df = .y,
               name = .x,
               temporary = F, overwrite = T))

# Add BQ tables to nested df
split_ids <- split_ids %>%
  mutate(id_tbl = map(bq_id_path, ~tbl(lliu_con, I(.)))) %>%
  mutate(ts_tbl = map(bq_ts_path, ~tbl(lliu_con, I(.))))

# Join function
join_data <- function(ts_table, id_table) {
  ts_table <- ts_table %>%
    select(vb_voterbase_id,
           vb_tsmart_exact_track,
           vb_tsmart_exact_address_track,
           tmc_hh_id,
           file_date,
           vb_vf_source_state,
           vb_tsmart_state,
           vb_vf_reg_state,
           vb_vf_cd,
           vb_voterbase_registration_status,
           vb_vf_voter_status,
           vb_voterbase_dob,
           vb_voterbase_gender,
           vb_voterbase_race,
           civis_race,
           vb_vf_party,
           vb_vf_county_name,
           vb_tsmart_cd,
           ts_tsmart_partisan_score,
           ts_tsmart_presidential_general_turnout_score,
           ts_tsmart_ideology_score,
           ts_tsmart_college_graduate_score,
           ts_tsmart_urbanicity,
           vb_tsmart_address_deliverability_indicator,
           vb_voterbase_mailable_flag,
           vb_voterbase_deceased_flag,
           vb_vf_g2022,
           vb_vf_g2020,
           vb_vf_g2018,
           vb_vf_g2016,
           vb_vf_g2012,
           vb_vf_p2022,
           vb_vf_p2020,
           vb_vf_p2018,
           vb_vf_p2016)
  
  id_table %>%
    left_join(ts_table, by = "vb_voterbase_id") %>%
    collect()
}

# Join each set of IDs to the appropriate voter file
split_ids <- split_ids %>% 
  mutate(joined_data = map2(ts_tbl, id_tbl, join_data))

# Create tidy covariate file
df <- split_ids %>%
  ungroup() %>%
  select(bq_ts_path, joined_data) %>%
  unnest(joined_data) %>%
  bind_rows()

# Write to S3
s3write_using(df, 
              FUN = write_rds,
              bucket = bucket,
              object = "p080_moveon_impact_analysis/voter_file_covariates.rds")
```

## Descriptives

```{r}
length(unique(df$vb_voterbase_id))
glimpse(df)
check_na(df)
```